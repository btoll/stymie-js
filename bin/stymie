#!/usr/bin/env node --harmony

(() => {
    'use strict';

    let argv = require('yargs')
            .usage('Usage: stymie <command> [options]')
            .example('stymie add', 'Adds a new entry')
            .command('add', 'Add a new entry')

            .example('stymie edit', 'Edits an entry')
            .command('edit', 'Edit an entry')

            .example('stymie generate', 'Generates a diceware passphrase')
            .command('generate', 'Generate a passphrase')

            .example('stymie get', 'Retrieves an entry')
            .command('get', 'Get an entry')

            .example('stymie has', 'Checks if the entry exists')
            .command('has', 'Check if the entry exists')

            .example('stymie init', 'Installs')
            .command('init', 'Install the password file directory and config file')

            .example('stymie list', 'Lists all entries')
            .command('list', 'List all entries')

            .example('stymie remove', 'Deletes an entry')
            .command('remove', 'Delete an entry')

            .help('h')
            .alias('h', 'help')
            .argv,
        install = require('../lib/install'),
        command = argv._[0];

    if (command === 'init') {
        install.install();
    } else {
        let stymie = require('../index'),
            util = require('../lib/util'),
            env = process.env,
            stymieDir = `${env.STYMIE || env.HOME}/.stymie.d`;

        util.fileExists(`${stymieDir}/c`).then((file) => {
            require('jcrypt')(file, null, ['--decrypt'], true).then((data) => {
                util.setGPGOptions(data);

                switch (command) {
                    case 'add': stymie.add(argv._[1]); break;
                    case 'edit': stymie.edit(argv._[1]); break;
                    case 'generate': stymie.generate(argv._[1]); break;
                    case 'get': stymie.get(argv._[1]); break;
                    case 'has': stymie.has(argv._[1]); break;
                    case 'list': stymie.list(argv._[1]); break;
                    case 'remove': stymie.remove(argv._[1]); break;
                }
            });
        }).catch((err) => {
            util.logError('It appears that the password file directory and config file needed by stymie is not installed.\n');

            require('inquirer').prompt([{
                type: 'list',
                name: 'install',
                message: 'Do you wish to install now?:',
                choices: [
                    {name: 'Yes', value: true},
                    {name: 'No, I\'ll do it myself later.', value: false}
                ]
            }], (answers) => {
                if (!answers.install) {
                    util.logInfo('Run `bash scripts/postinstall.sh` to install.');
                } else {
                    install.install();
                }
            });
        });
    }
})();

